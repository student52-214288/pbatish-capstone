name: Deploy to aws Elastic Beanstalks
on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-west-2
  K8S_NAMESPACE: devops
  CLUSTER_DEPLOYMENT_NAME: devops-app
  JFROG_URL: trialsir89a.jfrog.io
  JFROG_REPO: devops-docker                        
  INITIALS: pb                                     
  IMAGE_TAG: ${{ github.sha }} 


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run lint
        run: |
          flake8 app.py

  test-and-push:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          PYTHONPATH=$(pwd) pytest tests/test_app.py

      - name: Publish to Jfrog
        uses: docker/setup-qemu-action@v3

      - name: Log in Jfrog
        uses: docker/login-action@v3
        with:
          registry: ${{ env.JFROG_URL }}
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Build & push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.JFROG_URL }}/${{ env.JFROG_REPO }}/${{ env.INITIALS }}-devops:${{ env.IMAGE_TAG }}
            ${{ env.JFROG_URL }}/${{ env.JFROG_REPO }}/${{ env.INITIALS }}-devops:latest
      
  deploy-eks:
    name: deploy to eks
    needs: test-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: us-west-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ${{ secrets.EKS_CLUSTER_NAME }} \
            --region us-west-2

      - name: add namespace if not there
        run : |
          kubectl get namespace ${{ env.K8S_NAMESPACE }} \
            || kubectl create namespace ${{ env.K8S_NAMESPACE }}

      - name: Create a secret
        run: |
          kubectl create secret docker-registry jfrog-pull-secret \
           --docker-server=${{ env.JFROG_URL }} \
            --docker-username=${{ secrets.ARTIFACTORY_USERNAME }} \
            --docker-password=${{ secrets.ARTIFACTORY_PASSWORD }} \
            --docker-email=${{ secrets.DOCKER_EMAIL }} \
            --namespace=${{ env.K8S_NAMESPACE }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml \
            --namespace=${{ env.K8S_NAMESPACE }}
          kubectl rollout status deployment/devops-app \
            --namespace=${{ env.K8S_NAMESPACE }}        